function ex_init_detector_params_window

global REMORA

defaultPos = [0.25,0.35,0.38,0.4];
if isfield(REMORA.fig, 'ex')
    % Check if the figure already exists. If so, don't move it.
    if isfield(REMORA.fig.ex, 'detector') && isvalid(REMORA.fig.ex.detector)
        defaultPos = get(REMORA.fig.ex.detector,'Position');
    else
        REMORA.fig.ex.detector = figure;
    end
else 
    REMORA.fig.ex.detector = figure;
end

clf

set(REMORA.fig.ex.detector,'NumberTitle','off', ...
    'Name','Explosion Detector - v1.0',...
    'Units','normalized',...
    'MenuBar','none',...
    'Position',defaultPos, ...
    'Visible', 'on',...
    'ToolBar', 'none');

figure(REMORA.fig.ex.detector)

% Load/save settings pulldown:

if ~isfield(REMORA.fig.ex,'EXfileMenu') || ~isvalid(REMORA.fig.ex.EXfileMenu)
    REMORA.fig.ex.EXfileMenu = uimenu(REMORA.fig.ex.detector,'Label',...
        'Save/Load Settings','Enable','on','Visible','on');
    
    % Spectrogram load/save params:
    uimenu(REMORA.fig.ex.EXfileMenu,'Label','&Load Settings',...
        'Callback','ex_detector_control(''ex_detector_settingsLoad'')');
    uimenu(REMORA.fig.ex.EXfileMenu,'Label','&Save Settings',...
        'Callback','ex_detector_control(''ex_detector_settingsSave'')');
end

% Button grid layouts
% 14 rows, 2 columns
r = 15; % Rows (Extra space for separations between sections)
c = 2;  % Columns
h = 1/r;
w = 1/c;
dy = h * 0.8;
% dx = 0.008;
ybuff = h*.2;
% Y Position (Rrelative Units)
y = 1:-h:0;

% X Position (Relative Units)
x = 0:w:1;

% Colors
bgColor = [1 1 1];  % White
bgColorRed = [1 .6 .6];  % Red
% bgColorGray = [.86 .86 .86];  % Gray
bgColor3 = [.75 .875 1]; % Light Green 
bgColor4 = [.76 .87 .78]; % Light Blue 

REMORA.ex.verify = [];

REMORA.ex.params_help = ex_get_help_strings;

% Title:

labelStr = 'Explosion Detector Settings';
btnPos=[x(1) y(2) 2*w h];
REMORA.ex.detector.headtext = uicontrol(REMORA.fig.ex.detector, ...
    'Style','text', ...
    'Units','normalized', ...
    'Position',btnPos, ...
    'String',labelStr, ...
    'FontUnits','points', ...
    'FontWeight','bold',...
    'FontSize',12,...
    'Visible','on');
% Set paths and strings
%***********************************
%% Base Folder Text
labelStr = 'Audio Base Directory';
btnPos=[x(1) y(3)-ybuff w/2 h];
REMORA.ex.verify.baseDirTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.baseDirHelp));
%  'BackgroundColor',bgColor3,...

% Base Folder Editable Text
labelStr=num2str(REMORA.ex.detect_params.baseDir);
btnPos=[x(1)+w/2 y(3) w h];
REMORA.ex.verify.baseDirEdTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'HorizontalAlignment','left',...
    'Visible','on',...
    'Callback','ex_detector_control(''setbaseDir'')');

labelStr = 'Search Sub-Folders';
btnPos=[x(1)+w/2 y(4) w h];
REMORA.ex.verify.recursSearch = uicontrol(REMORA.fig.ex.detector,...
   'Style','checkbox',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'Value',REMORA.ex.detect_params.recursSearch,...
   'FontUnits','normalized', ...
   'Visible','on',...
   'Callback','ex_detector_control(''recursSearch'')');

%% Output Folder Text
labelStr = 'Output Folder';
btnPos=[x(1) y(5)-ybuff w/2 h];
REMORA.ex.verify.outDirTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.outDirHelp));%   'BackgroundColor',bgColor3,...

% Output Folder Editable Text
labelStr=num2str(REMORA.ex.detect_params.outDir);
btnPos=[x(1)+w/2 y(5) w h];
REMORA.ex.verify.outDirEdTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'HorizontalAlignment','left',...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setOutDir'')');

%% Explosion Detector Settings Header
labelStr = 'Explosion Detector Parameters';
btnPos=[x(1) y(6) 2*w h-ybuff];
REMORA.ex.verify.detectParmTxt = uicontrol(REMORA.fig.ex.detector, ...
    'Style','text', ...
    'Units','normalized', ...
    'Position',btnPos, ...
    'BackgroundColor',bgColorRed,...
    'String',labelStr, ...
    'FontWeight','bold',...    
    'FontSize',11,...
    'FontUnits','points',...
    'Visible','on');

%% Threshold Text
labelStr = 'Threshold';
btnPos=[x(1) y(8)-ybuff w/2 h];
REMORA.ex.verify.thresholdTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.thresholdHelp));

% Threshold Editable Text
labelStr=num2str(REMORA.ex.detect_params.threshold);
btnPos=[x(1)+w/2 y(8) w/4 h];
REMORA.ex.verify.threshEdTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setThresh'')');

%% Threshold Offset Text
labelStr = 'Threshold Offset';
btnPos=[x(1) y(9)-ybuff w/2 h];
REMORA.ex.verify.thresholdOffsetTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.thresholdOffsetHelp));

% Threshold Editable Text
labelStr=num2str(REMORA.ex.detect_params.c2_offset);
btnPos=[x(1)+w/2 y(9) w/4 h];
REMORA.ex.verify.thresholdOffsetEdTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setThreshOffset'')');

%% Minimum Time Distance Text
labelStr = 'Minimum Time Distance';
btnPos=[x(1) y(10)-ybuff w/2 h];
REMORA.ex.verify.minTimeTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.minTimeHelp));

% Minimum Time Distance Editable Text
labelStr=num2str(REMORA.ex.detect_params.diff_s);
btnPos=[x(1)+w/2 y(10) w/4 h];
REMORA.ex.verify.minTimeEdTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setMinTime'')');

%% # of Noise Samples Text
labelStr = '# of Noise Samples';
btnPos=[x(1) y(11)-ybuff w/2 h];
REMORA.ex.verify.noiseSampTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.noiseSampHelp));

% # of Noise Samples Editable Text
labelStr=num2str(REMORA.ex.detect_params.nSamples);
btnPos=[x(1)+w/2 y(11) w/4 h];
REMORA.ex.verify.noiseSampEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setNoiseSamp'')');

%% RMS Noise After Signal Samples Text
labelStr = 'RMS Noise After Signal';
btnPos=[x(1) y(12)-ybuff w/2 h];
REMORA.ex.verify.rmsNoiseAfterTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.rmsNoiseAfterHelp));

% RMS Noise After Signal Editable Text
labelStr=num2str(REMORA.ex.detect_params.rmsAS);
btnPos=[x(1)+w/2 y(12) w/4 h];
REMORA.ex.verify.rmsNoiseAfterEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setRMSNoiseAfter'')');

%% RMS Noise Before Signal Text
labelStr = 'RMS Noise Before Signal';
btnPos=[x(2) y(8)-ybuff w/2 h];
REMORA.ex.verify.rmsNoiseBeforeTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.rmsNoiseBeforeHelp));

% RMS Noise Before Signal Editable Text
labelStr=num2str(REMORA.ex.detect_params.rmsBS);
btnPos=[x(2)+w/2 y(8) w/4 h];
REMORA.ex.verify.rmsNoiseBeforeEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setRMSNoiseBefore'')');

%% PP Noise After Signal Text
labelStr = 'PP Noise After Signal';
btnPos=[x(2) y(9)-ybuff w/2 h];
REMORA.ex.verify.ppNoiseAfterTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.ppNoiseAfterHelp));

% PP Noise After Signal Editable Text
labelStr=num2str(REMORA.ex.detect_params.ppAS);
btnPos=[x(2)+w/2 y(9) w/4 h];
REMORA.ex.verify.ppNoiseAfterEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setPPNoiseAfter'')');

%% PP Noise Before Signal Text
labelStr = 'PP Noise Before Signal';
btnPos=[x(2) y(10)-ybuff w/2 h];
REMORA.ex.verify.ppNoiseBeforeTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.ppNoiseBeforeHelp));

% PP Noise Before Signal Editable Text
labelStr=num2str(REMORA.ex.detect_params.ppBS);
btnPos=[x(2)+w/2 y(10) w/4 h];
REMORA.ex.verify.ppNoiseBeforeEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setPPNoiseBefore'')');

%% Duration After Explosion Signal Text
labelStr = 'Duration After Explosion';
btnPos=[x(2) y(11)-ybuff w/2 h];
REMORA.ex.verify.durAfterTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.durAfterHelp));

% Duration After Explosion Editable Text
labelStr=num2str(REMORA.ex.detect_params.durLong_s);
btnPos=[x(2)+w/2 y(11) w/4 h];
REMORA.ex.verify.durAfterEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setDurAfter'')');

%% Duration Before Explosion? Signal Text
labelStr = 'Duration Before Explosion';
btnPos=[x(2) y(12)-ybuff w/2 h];
REMORA.ex.verify.durBeforeTxt = uicontrol(REMORA.fig.ex.detector,...
   'Style','text',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'FontUnits','normalized', ...
   'Visible','on',...
   'TooltipString',sprintf(REMORA.ex.params_help.durBeforeHelp));

% Duration Before Explosion? Editable Text
labelStr=num2str(REMORA.ex.detect_params.durShort_s);
btnPos=[x(2)+w/2 y(12) w/4 h];
REMORA.ex.verify.durBeforeEdText = uicontrol(REMORA.fig.ex.detector,...
    'Style','edit',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'Visible','on',...
    'Callback','ex_detector_control(''setDurBefore'')');

labelStr = 'Plotting On';
btnPos=[x(1)+w/2 y(13) w h];
REMORA.ex.verify.plotOn = uicontrol(REMORA.fig.ex.detector,...
   'Style','checkbox',...
   'Units','normalized',...
   'Position',btnPos,...
   'String',sprintf(labelStr,'Interpreter','tex'),...
   'Value',REMORA.ex.detect_params.plotOn,...
   'FontUnits','normalized', ...
   'Visible','on',...
   'Callback','ex_detector_control(''plotOn'')');

%% Run Button
labelStr = 'Run Explosion Detector';
btnPos=[x(2)-w/2 y(15) w h];

REMORA.ex.verify.runTxt = uicontrol(REMORA.fig.ex.detector,...
    'Style','pushbutton',...
    'Units','normalized',...
    'Position',btnPos,...
    'BackgroundColor',bgColor3,...
    'String',labelStr,...
    'FontUnits','normalized', ...
    'FontSize',.5,...
    'Visible','on',...
    'FontWeight','bold',...
    'Callback','ex_detector_control(''runExplosionDetector'')');
